{"version":3,"sources":["components/user/User.module.css","components/friends/Friends.module.css","components/transactions/Transactions.module.css","components/statistics/Statistics.module.css","components/Container/Container.module.css","components/Container/Container.js","components/transactions/Transactions.js","components/statistics/colorGenerator.js","components/statistics/Statistics.js","components/user/User.js","components/friends/Frienditem.js","components/friends/FriendsList.js","components/App.js","index.js"],"names":["module","exports","Container","children","className","s","container","TransactionHistory","items","transaction__history","header","map","el","id","type","amount","currency","data","generateRandomColor","color","Math","floor","random","pow","toString","length","Statistic","title","stats","styles","statistics","stat__list","label","percentage","item","style","backgroundColor","UserMarkup","name","avatar","tag","location","followers","views","likes","profile","description","thumb","src","alt","profile__items","stats__item","quantity","FriendItem","isOnline","st","active","offline","width","FriendsList","friends","friend__list","App","User","user","Statistics","statisticalData","transactions","ReactDom","render","document","querySelector"],"mappings":"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","file":"static/js/main.c4dfec00.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"User_profile__3QMqC\",\"thumb\":\"User_thumb__2VRoR\",\"description\":\"User_description__2M9u8\",\"profile__items\":\"User_profile__items__22VDX\",\"location\":\"User_location__2VuS0\",\"stats\":\"User_stats__2QzLe\",\"label\":\"User_label__d7amU\",\"stats__item\":\"User_stats__item__WYi7M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__3wdDS\",\"item\":\"Friends_item__3PESY\",\"thumb\":\"Friends_thumb__3Sj1U\",\"name\":\"Friends_name__1NYbK\",\"active\":\"Friends_active__1oggS\",\"offline\":\"Friends_offline__2Qk9h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction__history\":\"Transactions_transaction__history__1U_99\",\"header\":\"Transactions_header__9vMqK\",\"data\":\"Transactions_data__3K2Pa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__3_AbI\",\"title\":\"Statistics_title__WpQ8W\",\"stat__list\":\"Statistics_stat__list__1Gl34\",\"item\":\"Statistics_item__Xkbod\",\"label\":\"Statistics_label__1yVkF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__36S8S\"};","import s from 'components/Container/Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n","import PropTypes from 'prop-types';\nimport s from './Transactions.module.css';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <div className={s.container}>\n      <table className={s.transaction__history}>\n        <thead>\n          <tr>\n            <th className={s.header}>Type</th>\n            <th className={s.header}>Amount</th>\n            <th className={s.header}>Currency</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {items.map(el => {\n            const { id, type, amount, currency } = el;\n            return (\n              <tr key={id}>\n                <td className={s.data}>{type}</td>\n                <td className={s.data}>{amount}</td>\n                <td className={s.data}>{currency}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\nexport default TransactionHistory;\n","export default function generateRandomColor() {\n  let color = Math.floor(Math.random() * Math.pow(256, 3)).toString(16);\n  while (color.length < 6) {\n    color = '0' + color;\n  }\n  return '#' + color;\n}\n","import PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\nimport generateRandomColor from './colorGenerator';\n\nconst Statistic = ({ title, stats }) => {\n  return (\n    <section className={styles.statistics}>\n      <div className={styles.container}>\n        {title && <h2 className={styles.title}>{title}</h2>}\n\n        <ul className={styles.stat__list}>\n          {stats.map(el => {\n            const { label, id, percentage } = el;\n            return (\n              <li\n                className={styles.item}\n                key={id}\n                style={{ backgroundColor: generateRandomColor() }}\n              >\n                <span className={styles.label}>{label}</span>\n                <span className={styles.percentage}> {percentage}%</span>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </section>\n  );\n};\n\nStatistic.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\nexport default Statistic;\n","import PropTypes from 'prop-types';\nimport styles from './User.module.css';\n// console.log(styles);\n\nconst UserMarkup = ({\n  name,\n  avatar,\n  tag,\n  location,\n  followers,\n  views,\n  likes,\n}) => {\n  return (\n    <div className={styles.profile}>\n      <div className={styles.description}>\n        <div className={styles.thumb}>\n          <img src={avatar} alt={name} className={styles.avatar} />\n        </div>\n        <p className={styles.profile__items}>{name}</p>\n        <p className={styles.profile__items}>@a{tag}</p>\n        <p className={styles.location}>{location}</p>\n      </div>\n\n      <ul className={styles.stats}>\n        <li className={styles.stats__item}>\n          <span className={styles.label}>Followers</span>\n          <span className={styles.quantity}> {followers}</span>\n        </li>\n        <li className={styles.stats__item}>\n          <span className={styles.label}>Views</span>\n          <span className={styles.quantity}> {views}</span>\n        </li>\n        <li className={styles.stats__item}>\n          <span className={styles.label}>Likes</span>\n          <span className={styles.quantity}> {likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nUserMarkup.propTypes = {\n  name: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  followers: PropTypes.number.isRequired,\n  views: PropTypes.number.isRequired,\n  likes: PropTypes.number.isRequired,\n};\n\nexport default UserMarkup;\n","import PropTypes from 'prop-types';\nimport st from './Friends.module.css';\n\nconst FriendItem = ({ avatar, name, isOnline, id }) => {\n  return (\n    <>\n      {isOnline ? (\n        <span className={st.active}></span>\n      ) : (\n        <span className={st.offline}></span>\n      )}\n      <div className={st.thumb}>\n        <img className={st.avatar} src={avatar} alt={name} width=\"48\" />\n      </div>\n      <p className={st.name}>{name}</p>\n    </>\n  );\n};\nFriendItem.propTypes = {\n  name: PropTypes.string,\n  avatar: PropTypes.string,\n  isOnline: PropTypes.bool,\n  id: PropTypes.number,\n};\nexport default FriendItem;\n","import PropTypes from 'prop-types';\nimport FriendItem from './Frienditem';\nimport st from './Friends.module.css';\n\nconst FriendsList = ({ friends }) => {\n  return (\n    <div className={st.container}>\n      <section className={st.friends}>\n        <ul className={st.friend__list}>\n          {friends.map(({ avatar, name, isOnline, id }) => (\n            <li className={st.item} key={id}>\n              <FriendItem avatar={avatar} name={name} isOnline={isOnline} />\n            </li>\n          ))}\n        </ul>\n      </section>\n    </div>\n  );\n};\n\nFriendsList.propTypes = {\n  name: PropTypes.string,\n  avatar: PropTypes.string,\n  isOnline: PropTypes.bool,\n  id: PropTypes.number,\n};\nexport default FriendsList;\n","import Container from './Container/Container';\nimport transactions from './transactions/transactions.json';\nimport TransactionHistory from './transactions/index';\nimport statisticalData from './statistics/statistics.json';\nimport Statistics from './statistics/index';\nimport user from './user/user.json';\nimport UserMarkup from './user/index';\nimport friends from './friends/friends.json';\nimport Friend from './friends/index';\n\nexport default function App() {\n  return (\n    <Container>\n      <UserMarkup\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        followers={user.stats.followers}\n        views={user.stats.views}\n        likes={user.stats.likes}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Friend friends={friends} />\n      <TransactionHistory items={transactions} />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './components/App';\nimport './index.css';\n// import './components/container/container.css';\n\nReactDom.render(<App />, document.querySelector('#root'));\n\n// ReactDom.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('#root'),\n// );\n\n// ====================\n// const el1 = <span>Hello</span>;\n// const el2 = <span>World</span>;\n// const jxEl = (\n//   <div>\n//     {el1}\n//     {el2}\n//   </div>\n// );\n// console.log(jxEl);\n\n// const el1 = React.createElement('span', { children: 'Hello' });\n// const el2 = React.createElement('span', { children: 'World' });\n\n// const el = React.createElement('div', {\n//   a: 5,\n//   b: 10,\n//   children: [el1, ' ', el2],\n// });\n// console.log(el);\n\n// ReactDom.render(el, document.querySelector('#root'));\n\n// ===============\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}